function responsive() { var a = this; a.jRes, a.mobile = !1, a.collapse = !1, this.setResponsive = function () { a.jRes = jRespond([{ label: "phone", enter: 0, exit: 767 }, { label: "desktop", enter: 768, exit: 1e5 }]), a.jRes.addFunc({ breakpoint: "desktop", enter: function () { $("nav").css("top", "0px"), $("nav").css("bottom", ""), $(".fm_container_main").css("top", "4.8em"), $(".fm_left_content").show(), $("#tabs").tabs({ heightStyle: "fill" }); var b = $(window).width() - $(".fm_right_content").width(); $("#FeatureDataControl").css("width", b), $("#FeatureDataControl").css("z-index", -1), $(".fm_right_content").show(), $(".fm_close.fm_hide").hide(), a.collapse = !1, $(".fm_ribbon").show(), $(".fm_ribbon").addClass("fm_ribbon_style"), $(".fm_ribbon").removeClass("fm_overlay"), $(".closediv").removeClass("fm_close"), $(".fm_ribbon").removeClass("fm_handle"), $(".fm_cluster").css("top", "165px"), $(".fm_cluster").css("left", "405px"), $("#mobileMenuFooter").hide(), mobe = !1, switchToDesktop(), console.log(">>> desktop enter <<<"), $(".fm_measure_trigger").click(function (b) { return b.preventDefault(), a.collapse && (a.setActiveTab(null), $(".fm_right_content").hide()), $(".fm_basemaps_list").hide(), $(".fm_search").hide(), $("#FeatureDataControl").toggle(), myFeatureTable.clearSelection(), myFeatureTable.refresh(), notLocatedFeatureTable.clearSelection(), notLocatedFeatureTable.refresh(), !1 }) }, exit: function () { $(".fm_close.fm_hide").show(), a.collapse = !0, console.log("<<< desktop exit >>>") } }), a.jRes.addFunc({ breakpoint: "phone", enter: function () { mobe = !0, hideZoomControl(), $(".fm_container_main").css("top", "0px"), a.mobile = !0, a.collapse = !0, a.setActiveTab(null), $(".fm_ribbon").hide(), $(".fm_show").hide(), $(".fm_left_content").hide(), $(".fm_right_content").hide(), $(".fm_ribbon").removeClass("fm_ribbon_style"), $(".fm_ribbon").addClass("fm_overlay"), $(".closediv").addClass("fm_close"), $(".fm_close").click(function () { $(this).hasClass("fm_hide") && $(this).hide(), $(this).parent().hide(), a.collapse && a.setActiveTab(null) }), $(".fm_ribbon").addClass("fm_handle"), $(".fm_cluster").css("left", "60px"), $(".fm_cluster").css("top", "110px"), $("#mobileMenuFooter").show(), $("#topContainer").css("padding", ""), $("#topContainer").css("float", "left"), $("#ShowMeForm").css("display", ""), $("#ShowMeForm").css("width", "150px"), $("#addFiltForm").css("float", "left"), $("#FeatureDataControl").css("height", ""), $("#FeatureDataControl").css("top", "37px"), $("#FeatureDataControl").css("bottom", "120px"), $("#FeatureDataControl").css("width", "100%"), switchToMobile(), console.log(">>> phone enter <<<"), $(".fm_measure_trigger").click(function (a) { return a.preventDefault(), loadInformationPanel(), !1 }), $("#ModalButtonMobile").click(function () { loadMobileChange() }), $("#closeMobile").click(function () { closeMobileChange() }) }, exit: function () { $(".fm_container_main").css("top", "4.8em"), showZoomControl(), a.mobile = !1, a.collapse = !1, $(".fm_ribbon").show(), $(".fm_show").show(), $(".fm_left_content").show(), $(".fm_right_content").show(), $(".fm_ribbon").addClass("fm_ribbon_style"), $(".fm_ribbon").removeClass("fm_handle"), $(".fm_ribbon").removeClass("fm_overlay"), $("closediv").removeClass("fm_close"), $(".fm_cluster").css("top", "150px"), $(".fm_cluster").css("left", "80px"), console.log("<<< phone exit >>>") } }) }, this.setBindings = function () { $(".fm_find_me").click(function () { $(this).hasClass("fm_on") ? $(this).removeClass("fm_on") : (res.findMe(), $(this).addClass("fm_on")) }), $("#radio").buttonset(), $("input:radio[name='radio']").click(function () { "Points" == $("#radio :radio:checked + label").text() ? flgPoints || (ViewByPoints(), flgPoints = !0) : flgPoints && (createClusterFromViewBy(), flgPoints = !1) }), $("#fatalityinjury").html("Fatalities Only"), $("#fatalityinjuryMobile").html("Fatalities Only"), $("input:radio[name='deathinjury']").click(function () { var a = $("#deathinjury :radio:checked + label").text(); switch (a) { case "Fatalities Only": visionZero.sqlInjuries = "(Severity = 'K')"; break; case "Serious Injuries Only": visionZero.sqlInjuries = "(Severity = 'A')"; break; case "Fatalities & Serious Injuries": visionZero.sqlInjuries = "(Severity = 'A' or Severity = 'K')" } $("#fatalityinjury").html(a), $("#fatalityinjuryMobile").html(a) }), $("#postbutton").click(function () { postMapData() }), $("#GoButton").click(function () { if (viewByValue = $("#ViewBy option:selected").text(), viewByDataValue = $("#ViewByData option:selected").text(), "" == viewByValue) return void alert("Please choose an option from the View By dropdown"); if ("State" == viewByValue) visionZero.sqlView = ""; else if ("" == viewByDataValue) return void alert("Please choose an option from the Show My dropdown"); $("#thisDialog").dialog("close"), updateCrashLayer(), removeClusterLayer(), flgPoints || ($('input[type="radio"][id="radio1"]').prop("checked", !0), $("#radio1").click(), flgPoints = !0), $("#FeatureDataControl").css("z-index", 100), $("#mapTabLink").click(), $("#FeatureDataControl").hide() }), $("#PreviousSelect").val("previous3Months"), $("#PreviousSelect").change(function () { var b, a = $(this).val(), c = 0; switch (a) { case "previous3Months": c = 3; break; case "previous6Months": c = 6; break; case "previousYear": c = 12; break; case "previous3Years": c = 36; break; case "previous5Years": c = 60 } if (b = new Date(enddateObject.getFullYear(), enddateObject.getMonth(), enddateObject.getDate()), b.setMonth(b.getMonth() - c), "" == a) $("#startdate").datepicker("setDate", ""), $("#enddate").datepicker("setDate", ""); else { $("#startdate").datepicker("setDate", b), $("#enddate").datepicker("setDate", enddateObject); var d = Number(b.getMonth()) + 1, e = Number(enddateObject.getMonth()) + 1; if ($("#daterange").html(d + "/" + b.getDate() + "/" + b.getFullYear() + " to " + e + "/" + enddateObject.getDate() + "/" + enddateObject.getFullYear()), $("#daterangeMobile").html(d + "/" + b.getDate() + "/" + b.getFullYear() + " to " + e + "/" + enddateObject.getDate() + "/" + enddateObject.getFullYear()), fromDate = $("#startdate").datepicker("getDate"), "" != fromDate) { var f = b, g = enddateObject, h = Number(f.getMonth()) + 1, i = Number(g.getMonth()) + 1; visionZero.sqlDate = "CRASH_DATE BETWEEN '" + h + "/" + f.getDate() + "/" + f.getFullYear() + "' AND '" + i + "/" + g.getDate() + "/" + g.getFullYear() + "'", crashLayer.visible && filterDataOnViewBy(visionZero.sqlDate, "Date", !0) } else visionZero.sqlDate = "" } }), $("#ViewBy").change(function () { visionZero.sqlMain = "", getFieldInfo(), refLayerVisibility = [], crashLayer.hide(), visionZero.crashLayerVisible = !1, refGraphicsLayer.clear(), refLayerVisibility.push(-1), setSubLayerVisibility(refLayer, refLayerVisibility); var a = $(this).val(); visionZero.id = a, "6" == a ? (zoomToNC(), sqlString = "1=1", filterDataOnViewBy(sqlString, "ViewBy", !1), $("#Location").html("North Carolina"), $("#LocationMobile").html("North Carolina"), $("#ViewByData").prop("disabled", !0)) : $("#ViewByData").prop("disabled", !1), document.getElementById("resultsHeader").innerText = "", crashTots = 0, totalCnt = 0 }), $("#ViewByData").change(function () { var a = $("#ViewBy").val(); visionZero.viewByData = a; var b; switch (b = null === $("#ViewByData").val() ? "6" : $("#ViewByData").val(), -1 !== b.indexOf("'") && (b = b.replace("'", "''")), visionZero.id = b, refLayerVisibility = [], a) { case "6": zoomToNC(), $("#Location").html("North Carolina"), $("#LocationMobile").html("North Carolina"), refLayerVisibility.push(6), setSubLayerVisibility(refLayer, refLayerVisibility), sqlString = "1=1", selectReferenceObject(sqlString, 6, "Shape_Length", !0), filterDataOnViewBy(sqlString, "ViewBy", !1); break; default: "" == b ? filterDataOnViewBy(sqlString, "ViewBy", !1) : ($("#Location").html(displayField + ": " + b), $("#LocationMobile").html(displayField + ": " + b), sqlString = displayField + " = '" + b + "'", selectReferenceObject(sqlString, dropdwnVal, displayField, !0), refLayerVisibility.push(dropdwnVal), setSubLayerVisibility(refLayer, refLayerVisibility), filterDataOnViewBy(sqlString, "ViewBy", !0)); break; case "1": $("#Location").html("LEL Region: " + b), $("#LocationMobile").html("LEL Region: " + b), sqlString = "LEL_REGION=" + b, selectReferenceObject(sqlString, dropdwnVal, "LEL_REGION", !0), refLayerVisibility.push(dropdwnVal), setSubLayerVisibility(refLayer, refLayerVisibility), filterDataOnViewBy(sqlString, "ViewBy", !0); break; case "0": $("#Location").html("DOT Division: " + b), $("#LocationMobile").html("DOT Division: " + b), sqlString = "DOT_DIVISI=" + b, selectReferenceObject(sqlString, dropdwnVal, "DOT_DIVISI", !0), refLayerVisibility.push(dropdwnVal), setSubLayerVisibility(refLayer, refLayerVisibility), sqlString = "DOT_DIV=" + b, filterDataOnViewBy(sqlString, "ViewBy", !0) } }), $(".fm_location_button").click(function () { locateAddress(!1, $(".fm_location_input").val()) }), $(".fm_location_input").keyup(function (a) { locateAddress(a, this.value) }), $(".fm_close").click(function () { $(this).hasClass("fm_hide") && $(this).hide(), $(this).parent().hide(), a.collapse && a.setActiveTab(null) }), $(".fm_location_VisionZero").click(function (a) { a.preventDefault(), $("#filtersDiv").hide(), $("#datesDiv").hide(), $("#routeDiv").hide(), $("#locationDiv").show(), $(".fm_basemaps_list").hide() }), $(".fm_filters_VisionZero").click(function (a) { a.preventDefault(), $("#filtersDiv").show(), $("#datesDiv").hide(), $("#routeDiv").hide(), $("#locationDiv").hide(), $(".fm_basemaps_list").hide() }), $(".fm_dates_VisionZero").click(function (a) { a.preventDefault(), $("#filtersDiv").hide(), $("#datesDiv").show(), $("#routeDiv").hide(), $("#locationDiv").hide(), $(".fm_basemaps_list").hide() }), $(".fm_route_VisionZero").click(function (a) { a.preventDefault(), $("#filtersDiv").hide(), $("#datesDiv").hide(), $("#routeDiv").show(), $("#locationDiv").hide(), $(".fm_basemaps_list").hide() }), $(".fm_basemap_trigger").click(function (b) { return b.preventDefault(), a.collapse && (a.setActiveTab(null), $(".fm_right_content").hide()), $(".fm_measurement").hide(), $(".fm_search").hide(), $(".fm_basemaps_list").show(), $("#filtersDiv").hide(), $("#datesDiv").hide(), $("#routeDiv").hide(), $("#locationDiv").show(), !1 }), $(".fm_search_trigger").click(function (b) { return b.preventDefault(), a.collapse && (a.setActiveTab(null), $(".fm_right_content").hide()), $(".fm_measurement").hide(), $(".fm_basemaps_list").hide(), $(".fm_search").toggle(), $(".fm_location_input").focus(), $(".fm_basemaps_list").hide(), !1 }), $(".fm_basemaps_list").on("click", "a", null, function (b) { b.preventDefault(); var c = this.getAttribute("data-name"); return setBasemap(c), $(".fm_basemaps_list").toggle(), a.setActiveTab(null), !1 }), $(".fm_share_trigger").click(function () { }), $(".fm_trigger").click(function (b) { b.preventDefault(), a.setActiveTab(this); var c = $(this).data("panel"); a.showPanel(c) }), $(".fm_factor_alcohol").click(function (a) { $(this).toggleClass("fm_factor_alcohol_selected"), SelectFactor("ALCOHOL_FL") }), $(".fm_factor_unbelted").click(function (a) { $(this).toggleClass("fm_factor_unbelted_selected"), SelectFactor("UNBELTED_F") }), $(".fm_factor_speeding").click(function (a) { $(this).toggleClass("fm_factor_speeding_selected"), SelectFactor("SPEED_FL") }), $(".fm_factor_distracted").click(function (a) { $(this).toggleClass("fm_factor_distracted_selected"), SelectFactor("DISTRACTED_FLAG") }), $(".fm_factor_under21").click(function (a) { $(this).toggleClass("fm_factor_under21_selected"), SelectFactor("TEEN_DRIVE") }), $(".fm_factor_olderdriver").click(function (a) { $(this).toggleClass("fm_factor_olderdriver_selected"), SelectFactor("OLDER_DRIV") }), $(".fm_factor_bike").click(function (a) { $(this).toggleClass("fm_factor_bike_selected"), SelectFactor("PEDALCYCLIST_FLAG") }), $(".fm_factor_pedestrian").click(function (a) { $(this).toggleClass("fm_factor_pedestrian_selected"), SelectFactor("PEDESTRIAN_FLAG") }), $(".fm_factor_motorcycle").click(function (a) { $(this).toggleClass("fm_factor_motorcycle_selected"), SelectFactor("MOTORCYCLE_FLAG") }), $(".fm_factor_truck").click(function (a) { $(this).toggleClass("fm_factor_truck_selected"), SelectFactor("CMV") }), $(".fm_factor_lane").click(function (a) { $(this).toggleClass("fm_factor_lane_selected"), SelectFactor("LANE_FL") }); var b = 0; $(".fm_factor_workzone").click(function (a) { $(this).toggleClass("fm_factor_workzone_selected"), $(".fm_factor_intersection").removeClass("fm_factor_intersection_selected"), $(".fm_factor_railroad").removeClass("fm_factor_railroad_selected"), 0 == b ? ($("#addfilters").html("Workzones"), $("#addfiltersMobile").html("Workzones"), setLocation(" AND (WORKZONE = 1)"), b = 1) : ($("#addfiltersMobile").empty(), $("#addfilters").empty(), setLocation(""), b = 0), c = 0, d = 0 }); var c = 0; $(".fm_factor_intersection").click(function (a) { $(this).toggleClass("fm_factor_intersection_selected"), $(".fm_factor_workzone").removeClass("fm_factor_workzone_selected"), $(".fm_factor_railroad").removeClass("fm_factor_railroad_selected"), 0 == c ? ($("#addfiltersMobile").html("Intersections"), $("#addfilters").html("Intersections"), setLocation(" AND (INTERSECTION = 1)"), c = 1) : ($("#addfiltersMobile").empty(), $("#addfilters").empty(), setLocation(""), c = 0), b = 0, d = 0 }); var d = 0; $(".fm_factor_railroad").click(function (a) { $(this).toggleClass("fm_factor_railroad_selected"), $(".fm_factor_workzone").removeClass("fm_factor_workzone_selected"), $(".fm_factor_intersection").removeClass("fm_factor_intersection_selected"), 0 == d ? ($("#addfilters").html("Railroads"), $("#addfiltersMobile").html("Railroads"), setLocation(" AND (RR = 1)"), d = 1) : ($("#addfilters").empty(), $("#addfiltersMobile").empty(), setLocation(""), d = 0), c = 0, b = 0 }), $("#ModalButton").click(function () { clearMapGraphics(), loadModal() }), hasTouch() ? console.log("device has touch") : console.log("device does not touch") }, this.setActiveTab = function (a) { }, this.showPanel = function (b) { $(".fm_right_content").show(), a.collapse && $(".fm_right_content").find(".fm_close").show(), $(".fm_panel").hide(); var b = "." + b; $(b).show() }, this.populateMapInfo = function (a) { document.title = a.title, $(".fm_title_bar").html(a.title); var b = "Map Creator: " + a.owner; $(".fm_description").html(a.description + "<p>" + b + "</p>") }, this.embedSetup = function () { console.log("styling page for embeding"), $("header").hide(), $("footer").hide(), a.mobile ? $(".fm_container_main").css("top", "0px") : ($("nav").css("top", "0px"), $(".fm_container_main").css("bottom", "0px").css("top", "4.8em")) }, this.generateEmbedCode = function () { var a = window.location.href, b = '<iframe src="' + a + '" frameborder="0" margin scrolling="no" style="width:100%;height:100%;" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'; $(".fm_embed_code").html(b) }, this.showLoading = function () { console.log("show loading") }, this.hideLoading = function () { console.log("hide loading") }, this.findMe = function () { navigator.geolocation && navigator.geolocation.getCurrentPosition(function (b) { if (map && b && b.coords) { var c = esri.geometry.geographicToWebMercator(new esri.geometry.Point(b.coords.longitude, b.coords.latitude)); b.accuracy < 1e4 ? map.centerAndZoom(c, 16) : map.centerAndZoom(c, 14); var d = new esri.Graphic(c, new esri.symbol.PictureMarkerSymbol("images/i_target.png", 38, 38)); a.animateMapSymbol(d) } }, function (a) { console.log(a), $(".fm_find_me").removeClass("fm_on") }) }, this.animateMapSymbol = function (a) { var b = 1, c = a.symbol.color, d = a.geometry.type, e = a.symbol; "extent" == d ? (e.outline.color.a = b, e.color.a = 0) : e.color.a = b, map.graphics.add(a); var f = setInterval(function () { if ("extent" != d && e.setColor(new dojo.Color([c.r, c.g, c.b, b])), e.outline) { var g = e.outline.color; e.outline.setColor(new dojo.Color([g.r, g.g, g.b, b])) } a.setSymbol(e), b < .01 && (clearInterval(f), map.graphics.remove(a)), b -= .01 }, 20) }, this.initApp = function () { a.setBindings(), a.generateEmbedCode(), a.setResponsive(), getBasemaps(), $(".fm_description").show() } } function hasTouch() { return !1 } function updateDatePickers(a, b) { threemonthdateObject = new Date(b.getFullYear(), b.getMonth(), b.getDate()), threemonthdateObject.setMonth(threemonthdateObject.getMonth() - 3), $("#startdate").datepicker({ dateFormat: "mm/dd/yy", maxDate: new Date(b.getFullYear(), b.getMonth(), b.getDate()), minDate: new Date(a.getFullYear(), a.getMonth(), a.getDate()), onSelect: function () { if (fromDate = $(this).datepicker("getDate"), visionZero.toDate = $("#enddate").datepicker("getDate"), "" != visionZero.toDate) { var a = new Date(fromDate), b = new Date(visionZero.toDate), c = Number(a.getMonth()) + 1, d = Number(b.getMonth()) + 1; visionZero.sqlDate = "CRASH_DATE BETWEEN '" + c + "/" + a.getDate() + "/" + a.getFullYear() + "' AND '" + d + "/" + b.getDate() + "/" + b.getFullYear() + "'", $("#daterange").html(c + "/" + a.getDate() + "/" + a.getFullYear() + " to " + d + "/" + b.getDate() + "/" + b.getFullYear()), $("#daterangeMobile").html(c + "/" + a.getDate() + "/" + a.getFullYear() + " to " + d + "/" + b.getDate() + "/" + b.getFullYear()), crashLayer.visible && constructSQL() } else visionZero.sqlDate = "" }, onClose: function () { this.fixFocusIE = !0, $("#topContainer").change().focus() } }).keyup(function (a) { 8 != a.keyCode && 46 != a.keyCode || $.datepicker._clearDate(this) }), $("#startdate").datepicker("setDate", threemonthdateObject), $("#enddate").datepicker({ dateFormat: "mm/dd/yy", maxDate: new Date(b.getFullYear(), b.getMonth(), b.getDate()), minDate: new Date(a.getFullYear(), a.getMonth(), a.getDate()), onSelect: function () { if (fromDate = $("#startdate").datepicker("getDate"), visionZero.toDate = $(this).datepicker("getDate"), "" != fromDate) { var a = new Date(fromDate), b = new Date(visionZero.toDate), c = Number(a.getMonth()) + 1, d = Number(b.getMonth()) + 1; visionZero.sqlDate = "CRASH_DATE BETWEEN '" + c + "/" + a.getDate() + "/" + a.getFullYear() + "' AND '" + d + "/" + b.getDate() + "/" + b.getFullYear() + "'", $("#daterange").html(c + "/" + a.getDate() + "/" + a.getFullYear() + " to " + d + "/" + b.getDate() + "/" + b.getFullYear()), $("#daterangeMobile").html(c + "/" + a.getDate() + "/" + a.getFullYear() + " to " + d + "/" + b.getDate() + "/" + b.getFullYear()), crashLayer.visible && constructSQL() } else visionZero.sqlDate = "" }, onClose: function () { this.fixFocusIE = !0, $("#topContainer").change().focus() } }).keyup(function (a) { 8 != a.keyCode && 46 != a.keyCode || $.datepicker._clearDate(this) }), $("#enddate").datepicker("setDate", b), $("#startdate").datepicker("refresh"), $("#enddate").datepicker("refresh"), enddateObject = new Date(b.getFullYear(), b.getMonth() + 1, b.getDate()); var c = Number(threemonthdateObject.getMonth()) + 1, d = Number(b.getMonth()) + 1; visionZero.sqlDate = "CRASH_DATE BETWEEN '" + c + "/" + threemonthdateObject.getDate() + "/" + threemonthdateObject.getFullYear() + "' AND '" + d + "/" + b.getDate() + "/" + b.getFullYear() + "'", $("#daterange").html(c + "/" + threemonthdateObject.getDate() + "/" + threemonthdateObject.getFullYear() + " to " + d + "/" + b.getDate() + "/" + b.getFullYear()), $("#daterangeMobile").html(c + "/" + threemonthdateObject.getDate() + "/" + threemonthdateObject.getFullYear() + " to " + d + "/" + b.getDate() + "/" + b.getFullYear()), constructSQL(), $("#LastAvailableData").html("Date of Last Available Data: " + enddateObject.getMonth() + "-" + enddateObject.getDate() + "-" + enddateObject.getFullYear()) } function ShareSelectedFactors(a) { $("." + a).toggleClass(a + "_selected") } function initShare() { var a = getUrlVars().read; if (void 0 !== a) { getMapData(a) } else 0 == mobe ? loadModal() : loadMobileModal(); disableCluster() } function getMapData(a) { $.ajax({ type: "GET", url: "json/" + a + ".json", dataType: "json", success: function (a) { parseMapData(a), console.log(a) }, error: function (a) { console.log(a) } }) } function loadInformationPanel() { var a = $(window).width() - 10; $("#mobileInfo").css("visibility", "visible").dialog({ modal: !0, resizable: !1, width: a, height: 350, draggable: !1, title: "Data Information", open: function (a, b) { $(".ui-widget-overlay").addClass("custom-overlay"), $(".ui-dialog-titlebar-close", b.dialog | b).hide() }, close: function (a, b) { $(".ui-widget-overlay").removeClass("custom-overlay"), $(".ui-dialog-titlebar-close", b.dialog | b).hide() } }) } function loadMobileChange() { closeMobileChange(), loadMobileModal() } function closeMobileChange() { $("#mobileInfo").dialog("close") } function loadModal() { var b = $(window).height(); b -= b > 900 ? 270 : 135, $("#thisDialog").css("visibility", "visible").dialog({ modal: !0, resizable: !1, width: 720, height: b, draggable: !1, title: "Welcome to NC Vision Zero Maps!", open: function (a, b) { $(".ui-dialog-titlebar-close", b.dialog | b).hide() } }) } function loadMobileModal() { var a = $(window).width() - 10, b = $(window).height() - 10; $("#thisDialog").css("visibility", "visible").dialog({ modal: !0, resizable: !1, width: a, height: b, draggable: !1, title: "Welcome to NC Vision Zero Maps!", open: function (a, b) { $(".ui-dialog-titlebar-close", b.dialog | b).hide() } }) } function postMapData() { var a = stringifyObject(visionZero); $.ajax({ url: "MapShare/Create", type: "POST", data: a, success: function (a, b, c) { var d = window.location.host + window.location.pathname; $("#shareLink").attr("href", "mailto:?subject=Someone%20has%20shared%20a%20NC%20Vision%20Zero%20Map%20with%20you&body=I%20have%20shared%20this%20map%20with%20you.%20%20Click%20below%20to%20view%20map.%0D%0Ahttps://" + d + "?read=" + a), $("#shareInfo").css("visibility", "visible").dialog({ modal: !0, resizable: !1, width: 350, height: 250, draggable: !1, title: "Share Map", open: function (a, b) { $(".ui-widget-overlay").addClass("custom-overlay") }, close: function (a, b) { $(".ui-widget-overlay").removeClass("custom-overlay") } }) }, error: function (a, b, c) { alert(b) } }) } function getUrlVars() { for (var b, a = [], c = window.location.href.slice(window.location.href.indexOf("?") + 1).split("&"), d = 0; d < c.length; d++) b = c[d].split("="), a.push(b[0]), a[b[0]] = b[1]; return a } function parseMapData(a) { if (void 0 !== a) { if (void 0 !== a._mapExtentXmin && (visionZero.mapExtentXmax = a._mapExtentXmax, visionZero.mapExtentXmin = a._mapExtentXmin, visionZero.mapExtentYmin = a._mapExtentYmin, visionZero.mapExtentYmax = a._mapExtentYmax, zoomToShareExtent()), void 0 !== a._dropdwnVal && (visionZero.dropdwnVal = a._dropdwnVal), void 0 !== a._displayField && (visionZero.displayField = a._displayField), void 0 !== a._id && (visionZero.id = a._id), void 0 !== a._viewByData) switch (visionZero.viewByData = a._viewByData, visionZero.viewByData) { case "0": $("#Location").html("DOT Division: " + visionZero.id), $("#LocationMobile").html("DOT Division: " + visionZero.id), sqlString = "DOT_DIVISI=" + visionZero.id, selectReferenceObject(sqlString, visionZero.dropdwnVal, "DOT_DIVISI", !0), refLayerVisibility.push(visionZero.dropdwnVal), setSubLayerVisibility(refLayer, refLayerVisibility), sqlString = "DOT_DIV=" + visionZero.id, filterDataOnViewBy(sqlString, "ViewBy", !0); break; case "1": $("#Location").html("LEL Region: " + visionZero.id), $("#LocationMobile").html("LEL Region: " + visionZero.id), sqlString = "LEL_REGION=" + visionZero.id, selectReferenceObject(sqlString, visionZero.dropdwnVal, "LEL_REGION", !0), refLayerVisibility.push(visionZero.dropdwnVal), setSubLayerVisibility(refLayer, refLayerVisibility), filterDataOnViewBy(sqlString, "ViewBy", !0); break; case "6": $("#Location").html("North Carolina"), $("#LocationMobile").html("North Carolina"), zoomToNC(), refLayerVisibility.push(6), setSubLayerVisibility(refLayer, refLayerVisibility), sqlString = "1=1", selectReferenceObject(sqlString, 6, "Shape_Length", !0), filterDataOnViewBy(sqlString, "ViewBy", !1); break; default: "" == visionZero.id ? filterDataOnViewBy(sqlString, "ViewBy", !1) : ($("#Location").html(visionZero.displayField + ": " + visionZero.id), $("#LocationMobile").html(visionZero.displayField + ": " + visionZero.id), sqlString = visionZero.displayField + " = '" + visionZero.id + "'", selectReferenceObject(sqlString, visionZero.dropdwnVal, visionZero.displayField, !0), refLayerVisibility.push(visionZero.dropdwnVal), setSubLayerVisibility(refLayer, refLayerVisibility), filterDataOnViewBy(sqlString, "ViewBy", !0)) } void 0 !== a._toDate && (visionZero.toDate = a.ToDate), void 0 !== a._fromDate && (visionZero.fromDate = a._fromDate), void 0 !== a._selectFactors && (visionZero.selectFactors = a._selectFactors), void 0 !== a._sqlDate && (visionZero.sqlDate = a._sqlDate), void 0 !== a._sqlView && (visionZero.sqlView = a._sqlView), void 0 !== a._sqlMain && (visionZero.sqlMain = a._sqlMain), void 0 !== a._sqlInjuries && (visionZero.sqlInjuries = a._sqlInjuries), void 0 !== a._sqlMain && (visionZero.sqlMain = a._sqlMain), void 0 !== a._sqlLocations && (visionZero.sqlLocations = a._sqlLocations), void 0 !== a._crashLayerVisible && (1 == a._crashLayerVisible ? (crashLayer.show(), $("#radio").buttonset({ disabled: !1 }), visionZero.crashLayerVisible = !0) : (crashLayer.hide(), $("#radio").buttonset({ disabled: !1 }), visionZero.crashLayerVisible = !1)), void 0 !== a.ToDate && void 0 !== a.FromDate && bindDateFromTo(a), void 0 !== a._factorSqlString && SelectShareFactors(a._factorSqlString) } } function bindDateFromTo(a) { new Date(a.FromDate), new Date(a.ToDate); $("#startdate").val(a.FromDate), $("#enddate").val(a.ToDate); var d = new Date(fromDate), e = new Date(toDate), f = Number(d.getMonth()) + 1, g = Number(e.getMonth()) + 1; visionZero.sqlDate = "CRASH_DATE BETWEEN '" + f + "/" + d.getDate() + "/" + d.getFullYear() + "' AND '" + g + "/" + e.getDate() + "/" + e.getFullYear() + "'", crashLayer.visible && filterDataOnViewBy(visionZero.sqlDate, "Date", !0) } function enableCluster() { $("#radio").buttonset({ disabled: !1 }) } function disableCluster() { $("#radio").buttonset({ disabled: !0 }) } function openTable(a, b, c) { var d, e, f, g; for (f = document.getElementsByClassName("tabcontent"), d = 0; d < f.length; d++) f[d].style.display = "none"; for (g = document.getElementsByClassName("tablinks"), e = 0; e < g.length; e++) g[e].className = g[e].className.replace(" active", ""); document.getElementById(b).style.display = "block", document.getElementById(c).className += " active" } var res, sqlString, enddateObject, threemonthdateObject, mobe = !1, viewByValue, viewByDataValue, flgPoints = !0; $(document).ready(function () { res = new responsive, res.initApp() });